/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/companies/create": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["Schema"]["createCompanyInputSchema"];
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": components["schemas"]["Schema"]["createCompanyResultSchema"];
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": components["schemas"]["Schema"]["GenericErrorSchema"];
          };
        };
      };
    };
  };
  "/api/v1/companies": {
    get: {
      parameters: {
        query: {
          name?: string;
          sector?: string;
          skip?: number;
          take?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["findCompaniesResultSchema"];
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": components["schemas"]["Schema"]["GenericErrorSchema"];
          };
        };
      };
    };
  };
  "/api/v1/sectors": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["findSectorsResultSchema"];
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": components["schemas"]["Schema"]["GenericErrorSchema"];
          };
        };
      };
    };
  };
  "/api/v1/health-check/": {
    get: {
      responses: {
        /** @description Default Response */
        200: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Schema: {
      notFoundResponseSchema: {
        message: string;
      };
      successResponseSchema: {
        success: boolean;
      };
      GenericErrorSchema: {
        message: string;
      };
      uuidSchema: {
        /** Format: uuid */
        id: string;
      };
      createCompanyResultSchema: {
        company: {
          /** Format: uuid */
          id: string;
          /** Format: date-time */
          createdAt: string;
          /** Format: date-time */
          updatedAt: string;
          name: string;
          description: string;
          /** Format: uri */
          banner: string;
        };
      };
      createCompanyInputSchema: {
        name: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["name"];
        description: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["description"];
        banner: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["banner"];
        sectorIds: (string)[];
      };
      findCompaniesQuerySchema: {
        name?: string;
        sector?: string;
        skip?: number;
        take?: number;
      };
      findCompaniesResultSchema: {
        total: number;
        results: ({
            id: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["id"];
            createdAt: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["createdAt"];
            updatedAt: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["updatedAt"];
            name: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["name"];
            description: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["description"];
            banner: components["schemas"]["Schema"]["createCompanyResultSchema"]["company"]["banner"];
            sectors: ({
                /** Format: uuid */
                id: string;
                /** Format: date-time */
                createdAt: string;
                /** Format: date-time */
                updatedAt: string;
                companyId: string;
                sectorId: string;
              })[];
          })[];
      };
      findSectorsResultSchema: {
        sectors: ({
            /** Format: uuid */
            id: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            name: string;
          })[];
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
